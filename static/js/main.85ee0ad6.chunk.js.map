{"version":3,"sources":["components/compareAll/compareAll.module.css","App.module.css","components/bars/bars.module.css","components/topBar/TopBar.module.css","components/bars/bar/Bar.js","components/bars/bars.js","components/topBar/TopBar.js","util/Sort.js","util/ItemSelector.js","components/compareAll/compareAll.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","bar","props","className","style","height","number","width","bars","classes","barContainer","arr","map","num","index","Bar","key","length","TopBar","AppBar","background","position","Toolbar","Button","variant","color","onClick","genNewArray","disabled","disableButtons","InputLabel","id","Select","labelId","value","sortSpeed","onChange","changeSortSpeed","MenuItem","numOfBars","changeArraySize","bubbleSort","mergeSort","selectionSort","compareAllHandler","animations","n","i","j","temp","push","largest","array","tempArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","doMerge","selectBars","document","querySelectorAll","selectBubbleSortBars","selectMergeSortBars","selectSelectionSortBars","compareAll","superContainer","compareAllContainer","barsContainer","App","state","disableSortButton","animationSpeed","compareAllComplete","isMergeSortComplete","isBubbleSortComplete","isSelectionSortComplete","generateNewArray","rand","random","setState","event","target","setTimeout","dobubbleSort","doSelectionSort","doMergeSort","bubbleSortButtonClicked","dupArray","Sort","ItemSelector","firstIdx","secondIdx","backgroundColor","enabbleButtons","selectionSortButtonClicked","firstHeight","secondHeight","mergeSortButtonClicked","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","newHeight","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.85ee0ad6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"compareAllContainer\":\"compareAll_compareAllContainer__13T-9\",\"superContainer\":\"compareAll_superContainer__1Snyd\",\"barsContainer\":\"compareAll_barsContainer__KyQLh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barContainer\":\"bars_barContainer__q98V4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TopBar\":\"TopBar_TopBar__1JlaT\"};","import React from \"react\";\nimport \"./BBar.css\";\n\nfunction bar(props) {\n  return (\n    <div\n      className=\"detailBar\"\n      style={{ height: `${props.number}px`, width: `${props.width}%` }}\n    ></div>\n  );\n}\n\nexport default bar;\n","import React from \"react\";\nimport Bar from \"./bar/Bar\";\nimport classes from \"./bars.module.css\";\n\nfunction bars(props) {\n  return (\n    <div className={classes.barContainer}>\n      {props.arr.map((num, index) => {\n        return (\n          <Bar number={num} key={index} width={50 / props.arr.length}></Bar>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default bars;\n","import React from \"react\";\nimport classes from \"./TopBar.module.css\";\nimport {\n  AppBar,\n  Toolbar,\n  Button,\n  InputLabel,\n  Select,\n  MenuItem\n} from \"@material-ui/core\";\n\nfunction TopBar(props) {\n  return (\n    <AppBar style={{ background: \"#b2ebf2\" }} position=\"static\">\n      <Toolbar>\n        <div className={classes.TopBar}>\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              onClick={props.genNewArray}\n              disabled={props.disableButtons}\n            >\n              New Array\n            </Button>\n          </div>\n          <div>\n            <InputLabel id=\"label\">Sorting Speed</InputLabel>\n            <Select\n              labelId=\"label\"\n              id=\"select\"\n              disabled={props.disableButtons}\n              value={props.sortSpeed}\n              onChange={props.changeSortSpeed}\n            >\n              <MenuItem value=\"0.5\">Fast</MenuItem>\n              <MenuItem value=\"1\">Medium</MenuItem>\n              <MenuItem value=\"2\">Slow</MenuItem>\n            </Select>\n          </div>\n          <div>\n            <InputLabel id=\"label\">Array Size</InputLabel>\n            <Select\n              labelId=\"label\"\n              id=\"select\"\n              disabled={props.disableButtons}\n              value={props.numOfBars}\n              onChange={props.changeArraySize}\n            >\n              <MenuItem value=\"30\">Small</MenuItem>\n              <MenuItem value=\"100\">Medium</MenuItem>\n              <MenuItem value=\"200\">Large</MenuItem>\n            </Select>\n          </div>\n          <div>\n            <Button\n              color=\"secondary\"\n              onClick={props.bubbleSort}\n              disabled={props.disableButtons}\n            >\n              Bubble Sort\n            </Button>\n            <Button\n              color=\"secondary\"\n              onClick={props.mergeSort}\n              disabled={props.disableButtons}\n            >\n              Merge Sort\n            </Button>\n            <Button\n              color=\"secondary\"\n              onClick={props.selectionSort}\n              disabled={props.disableButtons}\n            >\n              Selection Sort\n            </Button>\n          </div>\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              onClick={props.compareAllHandler}\n              disabled={props.disableButtons}\n            >\n              Compare All\n            </Button>\n          </div>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default TopBar;\n","export const bubbleSort = arr => {\n  let animations = [];\n  const n = arr.length;\n  for (let i = 0; i < n - 1; i++) {\n    for (let j = 0; j < n - i - 1; j++) {\n      if (arr[j] > arr[j + 1]) {\n        let temp = arr[j];\n        arr[j] = arr[j + 1];\n        arr[j + 1] = temp;\n      }\n      animations.push([j, j + 1]);\n      animations.push([j, arr[j]]);\n      animations.push([j + 1, arr[j + 1]]);\n      animations.push([j, j + 1]);\n    }\n  }\n  return animations;\n};\n\nexport const selectionSort = arr => {\n  let animations = [];\n  const n = arr.length;\n  for (var i = 0; i < n; i++) {\n    let largest = 0;\n    for (var j = 0; j < n - i; j++) {\n      if (arr[j] > arr[largest]) {\n        largest = j;\n      }\n      animations.push([-1, j, largest]);\n      animations.push([1, j, largest]);\n    }\n    animations.push([1, j - 1, largest]);\n    animations.push([0, arr[largest], arr[j - 1]]);\n    let temp = arr[j - 1];\n    arr[j - 1] = arr[largest];\n    arr[largest] = temp;\n  }\n  return animations;\n};\n\nexport function mergeSort(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  const tempArray = array.slice();\n  mergeSortHelper(array, 0, array.length - 1, tempArray, animations);\n  return animations;\n}\n\nfunction mergeSortHelper(mainArray, startIdx, endIdx, tempArray, animations) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSortHelper(tempArray, startIdx, middleIdx, mainArray, animations);\n  mergeSortHelper(tempArray, middleIdx + 1, endIdx, mainArray, animations);\n  doMerge(mainArray, startIdx, middleIdx, endIdx, tempArray, animations);\n}\n\nfunction doMerge(\n  mainArray,\n  startIdx,\n  middleIdx,\n  endIdx,\n  tempArray,\n  animations\n) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    animations.push([i, j]);\n    animations.push([i, j]);\n    if (tempArray[i] <= tempArray[j]) {\n      animations.push([k, tempArray[i]]);\n      mainArray[k++] = tempArray[i++];\n    } else {\n      animations.push([k, tempArray[j]]);\n      mainArray[k++] = tempArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    animations.push([i, i]);\n    animations.push([i, i]);\n    animations.push([k, tempArray[i]]);\n    mainArray[k++] = tempArray[i++];\n  }\n  while (j <= endIdx) {\n    animations.push([j, j]);\n    animations.push([j, j]);\n    animations.push([k, tempArray[j]]);\n    mainArray[k++] = tempArray[j++];\n  }\n}\n","export const selectBars = () => document.querySelectorAll(\".detailBar\");\n\nexport const selectBubbleSortBars = () =>\n  document.querySelectorAll(\".bubbleSort .detailBar\");\n\nexport const selectMergeSortBars = () =>\n  document.querySelectorAll(\".mergeSort .detailBar\");\n\nexport const selectSelectionSortBars = () =>\n  document.querySelectorAll(\".selectionSort .detailBar\");\n","import React from \"react\";\nimport Bar from \"../bars/bar/Bar\";\nimport classes from \"./compareAll.module.css\";\n\nfunction compareAll(props) {\n  return (\n    <div className={classes.superContainer}>\n      <div className={classes.compareAllContainer}>\n        <div className={classes.barsContainer + \" bubbleSort\"}>\n          {props.arr.map((num, index) => {\n            return (\n              <Bar number={num} key={index} width={50 / props.arr.length}></Bar>\n            );\n          })}\n        </div>\n        <h3>Bubble Sort</h3>\n      </div>\n      <div className={classes.compareAllContainer}>\n        <div className={classes.barsContainer + \" mergeSort\"}>\n          {props.arr.map((num, index) => {\n            return (\n              <Bar number={num} key={index} width={50 / props.arr.length}></Bar>\n            );\n          })}\n        </div>\n        <h3>Merge Sort</h3>\n      </div>\n      <div className={classes.compareAllContainer}>\n        <div className={classes.barsContainer + \" selectionSort\"}>\n          {props.arr.map((num, index) => {\n            return (\n              <Bar number={num} key={index} width={50 / props.arr.length}></Bar>\n            );\n          })}\n        </div>\n        <h3>Selection Sort</h3>\n      </div>\n    </div>\n  );\n}\n\nexport default compareAll;\n","import React, { Component } from \"react\";\nimport classes from \"./App.module.css\";\nimport BarsContainer from \"./components/bars/bars\";\nimport TopBar from \"./components/topBar/TopBar\";\nimport * as Sort from \"./util/Sort\";\nimport * as ItemSelector from \"./util/ItemSelector\";\nimport CompareAll from \"./components/compareAll/compareAll\";\n\n// This is the main color of the array bars.\nconst PRIMARY_COLOR = \"yellow\";\n\n// This is the color of array bars that are being compared throughout the animations.\nconst SECONDARY_COLOR = \"red\";\n\n//actual color of the bars\nconst ACTUAL_COLOR = \"teal\";\n\nclass App extends Component {\n  state = {\n    disableSortButton: false,\n    array: [],\n    numOfBars: 100,\n    animationSpeed: 1,\n    compareAll: false\n  };\n\n  compareAllComplete = true;\n  isMergeSortComplete = true;\n  isBubbleSortComplete = true;\n  isSelectionSortComplete = true;\n\n  componentDidMount() {\n    this.generateNewArray();\n  }\n\n  generateNewArray = () => {\n    var arr = [];\n    for (var i = 0; i < this.state.numOfBars; i++) {\n      var rand = Math.floor(Math.random() * 700);\n      arr[i] = rand;\n    }\n    this.setState({\n      array: arr\n    });\n  };\n\n  changeArraySize = event => {\n    this.setState(\n      {\n        numOfBars: event.target.value\n      },\n      () => {\n        this.generateNewArray();\n      }\n    );\n  };\n\n  changeSortSpeed = event => {\n    this.setState({\n      animationSpeed: event.target.value\n    });\n  };\n\n  compareAllHandler = () => {\n    this.compareAllComplete = false;\n    this.isMergeSortComplete = false;\n    this.isBubbleSortComplete = false;\n    this.isSelectionSortComplete = false;\n    this.setState({ compareAll: true });\n    if (this.state.numOfBars > 100) {\n      this.setState({ numOfBars: 100 }, () => {\n        this.generateNewArray();\n      });\n    }\n    setTimeout(() => {\n      this.dobubbleSort();\n      this.doSelectionSort();\n      this.doMergeSort();\n    }, 100);\n  };\n\n  bubbleSortButtonClicked = () => {\n    this.setState({ compareAll: false }, () => {\n      this.dobubbleSort();\n    });\n  };\n\n  dobubbleSort = () => {\n    let bars;\n    let dupArray = this.state.array.slice();\n    this.setState({ disableButtons: true });\n    let animations = Sort.bubbleSort(dupArray);\n    if (this.state.compareAll) {\n      bars = ItemSelector.selectBubbleSortBars();\n    } else {\n      bars = ItemSelector.selectBars();\n    }\n\n    for (var i = 0; i < animations.length; i++) {\n      if (i % 4 === 0) {\n        const firstIdx = animations[i][0];\n        const secondIdx = animations[i][1];\n        setTimeout(() => {\n          bars[firstIdx].style.backgroundColor = PRIMARY_COLOR;\n          bars[secondIdx].style.backgroundColor = SECONDARY_COLOR;\n        }, i * this.state.animationSpeed);\n      } else if (i % 4 === 3) {\n        const firstIdx = animations[i][0];\n        const secondIdx = animations[i][1];\n        setTimeout(() => {\n          bars[firstIdx].style.backgroundColor = ACTUAL_COLOR;\n          bars[secondIdx].style.backgroundColor = ACTUAL_COLOR;\n        }, i * this.state.animationSpeed);\n      } else {\n        const index = animations[i][0];\n        const height = animations[i][1];\n        setTimeout(() => {\n          bars[index].style.height = `${height}px`;\n        }, i * this.state.animationSpeed);\n      }\n    }\n\n    setTimeout(() => {\n      this.isBubbleSortComplete = true;\n      if (\n        this.isSelectionSortComplete &&\n        this.isMergeSortComplete &&\n        !this.compareAllComplete\n      ) {\n        this.compareAllComplete = true;\n      }\n      this.enabbleButtons(animations.length, dupArray);\n    }, animations.length * this.state.animationSpeed);\n  };\n\n  enabbleButtons = (n, arr) => {\n    if (this.compareAllComplete) {\n      this.setState({ disableButtons: false });\n      this.setState({ array: arr });\n    }\n  };\n\n  selectionSortButtonClicked = () => {\n    this.setState({ compareAll: false }, () => {\n      this.doSelectionSort();\n    });\n  };\n\n  doSelectionSort = () => {\n    let bars;\n    this.setState({ disableButtons: true });\n    let dupArray = this.state.array.slice();\n    let animations = Sort.selectionSort(dupArray);\n    if (this.state.compareAll) {\n      bars = ItemSelector.selectSelectionSortBars();\n    } else {\n      bars = ItemSelector.selectBars();\n    }\n    for (var i = 0; i < animations.length; i++) {\n      if (animations[i][0] === -1) {\n        let firstIdx = animations[i][1];\n        let secondIdx = animations[i][2];\n        setTimeout(() => {\n          bars[firstIdx].style.backgroundColor = SECONDARY_COLOR;\n          bars[secondIdx].style.backgroundColor = PRIMARY_COLOR;\n        }, i * this.state.animationSpeed);\n      } else if (animations[i][0] === 1) {\n        let firstIdx = animations[i][1];\n        let secondIdx = animations[i][2];\n        setTimeout(() => {\n          bars[firstIdx].style.backgroundColor = ACTUAL_COLOR;\n          bars[secondIdx].style.backgroundColor = ACTUAL_COLOR;\n        }, i * this.state.animationSpeed);\n      } else {\n        let firstHeight = animations[i][1];\n        let secondHeight = animations[i][2];\n        let firstIdx = animations[i - 1][1];\n        let secondIdx = animations[i - 1][2];\n        setTimeout(() => {\n          bars[firstIdx].style.height = `${firstHeight}px`;\n          bars[secondIdx].style.height = `${secondHeight}px`;\n        }, i * this.state.animationSpeed);\n      }\n    }\n    setTimeout(() => {\n      this.isSelectionSortComplete = true;\n      if (\n        this.isMergeSortComplete &&\n        this.isBubbleSortComplete &&\n        !this.compareAllComplete\n      ) {\n        this.compareAllComplete = true;\n      }\n      this.enabbleButtons(animations.length, dupArray);\n    }, animations.length * this.state.animationSpeed);\n  };\n\n  mergeSortButtonClicked = () => {\n    this.setState({ compareAll: false }, () => {\n      this.doMergeSort();\n    });\n  };\n\n  doMergeSort = () => {\n    let bars;\n    this.setState({ disableButtons: true });\n    let dupArray = this.state.array.slice();\n    let animations = Sort.mergeSort(dupArray);\n    if (this.state.compareAll) {\n      bars = ItemSelector.selectMergeSortBars();\n    } else {\n      bars = ItemSelector.selectBars();\n    }\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = bars[barOneIdx].style;\n        const barTwoStyle = bars[barTwoIdx].style;\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * this.state.animationSpeed);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = bars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * this.state.animationSpeed);\n      }\n    }\n    for (let i = 0; i < bars.length; i++) {\n      setTimeout(() => {\n        bars[i].style.backgroundColor = ACTUAL_COLOR;\n      }, i + animations.length * this.state.animationSpeed);\n    }\n\n    setTimeout(() => {\n      this.isMergeSortComplete = true;\n      if (\n        this.isSelectionSortComplete &&\n        this.isBubbleSortComplete &&\n        !this.compareAllComplete\n      ) {\n        this.compareAllComplete = true;\n      }\n      this.enabbleButtons(animations.length, dupArray);\n    }, animations.length * this.state.animationSpeed);\n  };\n\n  render() {\n    return (\n      <div className={classes.App}>\n        <TopBar\n          bubbleSort={this.bubbleSortButtonClicked}\n          selectionSort={this.selectionSortButtonClicked}\n          mergeSort={this.mergeSortButtonClicked}\n          disableButtons={this.state.disableButtons}\n          genNewArray={this.generateNewArray}\n          sortSpeed={this.state.animationSpeed}\n          numOfBars={this.state.numOfBars}\n          changeSortSpeed={this.changeSortSpeed}\n          changeArraySize={this.changeArraySize}\n          compareAllHandler={this.compareAllHandler}\n        ></TopBar>\n        {this.state.compareAll ? (\n          <CompareAll arr={this.state.array}></CompareAll>\n        ) : (\n          <BarsContainer arr={this.state.array}></BarsContainer>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}